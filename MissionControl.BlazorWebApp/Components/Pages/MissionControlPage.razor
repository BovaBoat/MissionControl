@page "/missionControlPage"
@inject MissionControl.BlazorWebApp.Services.ConfigDataService ConfigData
@inject MissionControl.BlazorWebApp.Services.MissionControlDataService MissionControlData
@using MissionControl.Domain
@using MissionControl.Infrastructure
@rendermode InteractiveServer

<h3>MissionControl</h3>

<div class="status-square">
    @GetStatusText()
</div>

<span>Selected Vessel Name: @ConfigData.VesselName</span>

<div class="form-container">
    <h2>Enter Coordinates</h2>
    <form id="coordinateForm">
        <label for="latitude">Latitude:</label>
        <input @bind="latitudeString" type=" text" id="latitude" name="latitude" placeholder="Enter latitude" required>

        <label for="longitude">Longitude:</label>
        <input @bind="longitudeString" type="text" id="longitude" name="longitude" placeholder="Enter longitude" required>

        <button type="submit" onsubmit="OnMissionControlDataSubmit">Submit</button>
    </form>
</div>

<button class="btn btn-success" @onclick="StartMission">Start Mission</button>

@code
{
    private string latitudeString = "";
    private string longitudeString = "";

    private string GetStatusText()
    {
        return ConfigData.IsConfigured ? "Configured" : "Not Configured";
    }

    private void OnMissionControlDataSubmit()
    {
        MissionControlData.SetCoordinatesFromString(latitudeString, longitudeString);
    }

    private async Task StartMission()
    {
        var missionControler = new MissionControler();
        var communicationConfig = new MqttCommunicationConfig(ConfigData.BrokerAddress, ConfigData.PublishTopic, ConfigData.SubscribeTopic);
        var nodeConfig = new NodeConfig(ConfigData.VesselName, ConfigData.MissionControlName);

        try
        {
            missionControler.Configure(communicationConfig, nodeConfig);
            await missionControler.Connect();
            var destinationCoordinates = new MissionControlLib.Waypoints.Coordinates(MissionControlData.Latitude, MissionControlData.Longitude);
            await missionControler.StartMission(destinationCoordinates);
            Console.ReadKey();
        }
        catch
        {

        }   
    }
}
